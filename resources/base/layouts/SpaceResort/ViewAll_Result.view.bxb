result-view {
  match {
    ViewAll(all) {
      from-property {
        SpaceResort (result)
      }
    }
  }

  message {
    template-macro (SPACE_RESORT_RESULT) {
      param (result) {expression (result)}
    }
  }

  render {
    if (size(result) > 1) {
      list-of (result) {
        where-each (item) {
          layout-macro (space-resort-summary) {
            param (spaceResort) {
              expression(item)
            }
          }
        }
        highlights {
          select(pick) {
            // This first highlight uses preference learning to present a personalized recommendation based on the user's past behavior
            label {
              template-macro (HIGHLIGHT_LABEL_BY_PREFERENCES)
            }
            layout-macro (space-resort-highlight) {
              param (spaceResort) {
                expression(pick)
              }
            }
            order-by {
              sorting (pick) {
                by-preferences
              }
            }
          }
          select(pick) {
            label("#{raw(pick.highlight)}")
            layout-macro (space-resort-highlight) {
              param (spaceResort) {
                expression(pick)
              }
            }
            filter-by (exists(pick.highlight))
          }
          select(pick) {
            label("#{raw(pick.highlight)}")
            layout-macro (space-resort-highlight) {
              param (spaceResort) {
                expression(pick)
              }
            }
            filter-by (exists(pick.highlight))
          }
          select(pick) {
            label("#{raw(pick.highlight)}")
            layout-macro (space-resort-highlight) {
              param (spaceResort) {
                expression(pick)
              }
            }
            filter-by (exists(pick.highlight))
          }
        }
      }
    } else-if (size(result) == 1) {
      layout-macro (space-resort-details) {
        param (spaceResort) {
          expression (result)
        }
      }
    }
  }

  conversation-drivers {
    if ("size(result) == 1") {
      conversation-driver {
        template-macro (MakeReservation)
      }
    }
  }
}
